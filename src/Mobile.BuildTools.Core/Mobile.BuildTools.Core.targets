<Project>
  <PropertyGroup>
    <MobileBuildToolsInitDependsOn>_LocateBuildToolsConfig</MobileBuildToolsInitDependsOn>
    <_MobileBuildToolsCoreParentBuildTasksDll>$([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', 'Mobile.BuildTools.Core.dll'))</_MobileBuildToolsCoreParentBuildTasksDll>
  </PropertyGroup>

  <UsingTask TaskName="Mobile.BuildTools.Tasks.LocateBuildToolsConfigTask"
             AssemblyFile="$(_MobileBuildToolsCoreParentBuildTasksDll)"/>
  <UsingTask TaskName="Mobile.BuildTools.Tasks.BuildEnvironmentDumpTask"
             AssemblyFile="$(_MobileBuildToolsCoreParentBuildTasksDll)"/>
  <UsingTask TaskName="Mobile.BuildTools.Tasks.GoogleTask"
             AssemblyFile="$(_MobileBuildToolsCoreParentBuildTasksDll)"/>
  <UsingTask TaskName="Mobile.BuildTools.Tasks.EnvironmentSettingsTask"
             AssemblyFile="$(_MobileBuildToolsCoreParentBuildTasksDll)"/>

  <Target Name="MobileBuildToolsInit"
          BeforeTargets="CoreCompile;_CoreXamlG;XamlG;XamlC;Build;"
          AfterTargets="ResolveAssemblyReferences"
          DependsOnTargets="$(MobileBuildToolsInitDependsOn)">
  </Target>

  <Target Name="_LocateBuildToolsConfig"
          BeforeTargets="CoreCompile;GenerateMSBuildEditorConfigFileShouldRun;GenerateMSBuildEditorConfigFileCore">
    <LocateBuildToolsConfigTask ProjectDir="$(MSBuildProjectDirectory)"
                                ProjectName="$(MSBuildProjectName)"
                                SolutionDir="$(SolutionDir)"
                                TargetFrameworkIdentifier="$(TargetFramework)"
                                SdkShortFrameworkIdentifier="$(_SdkShortFrameworkIdentifier)"
                                IsCrossTargetingBuild="$(IsCrossTargetingBuild)">
      <Output TaskParameter="BuildToolsConfigFilePath"
              PropertyName="BuildToolsConfigFilePath" />
      <Output TaskParameter="LocatedSolutionDirectory"
              PropertyName="SolutionDir" />
      <Output TaskParameter="EnableArtifactCopy"
              PropertyName="BuildToolsEnableArtifactCopy" />
      <Output TaskParameter="EnableAutomaticVersioning"
              PropertyName="BuildToolsEnableAutomaticVersioning" />
      <Output TaskParameter="EnableImageProcessing"
              PropertyName="BuildToolsEnableImageProcessing" />
      <Output TaskParameter="EnableReleaseNotes"
              PropertyName="BuildToolsEnableReleaseNotes" />
      <Output TaskParameter="EnableScssToCss"
              PropertyName="BuildToolsEnableScssToCss" />
      <Output TaskParameter="EnableTemplateManifests"
              PropertyName="BuildToolsEnableTemplateManifests" />
    </LocateBuildToolsConfigTask>

    <ItemGroup>
      <AdditionalFiles Include="$(BuildToolsConfigFilePath)" />
    </ItemGroup>
  </Target>

  <Target Name="_ConfigureBuildToolsAppSettingsEnvironment"
          AfterTargets="_LocateBuildToolsConfig"
          BeforeTargets="CoreCompile;GenerateMSBuildEditorConfigFileShouldRun;GenerateMSBuildEditorConfigFileCore">
    <EnvironmentSettingsTask ConfigurationPath="$(BuildToolsConfigFilePath)"
                ProjectName="$(MSBuildProjectName)"
                ProjectDirectory="$(MSBuildProjectDirectory)"
                RootNamespace="$(RootNamespace)"
                SolutionDirectory="$(SolutionDir)"
                Configuration="$(Configuration)"
                IntermediateOutputPath="$(IntermediateOutputPath)"
                TargetFrameworkIdentifier="$(TargetFramework)">
      <Output TaskParameter="EnvironmentSettings"
              ItemName="BuildToolsEnvironmentSettings" />
    </EnvironmentSettingsTask>

    <ItemGroup>
      <AdditionalFiles Include="$(BuildToolsEnvironmentSettings)" />
    </ItemGroup>
  </Target>

  <Target Name="CIEnvironmentDump">
    <BuildEnvironmentDumpTask ProjectDirectory="$(MSBuildProjectDirectory)"
                              Configuration="$(Configuration)" />
  </Target>


  <Target Name="MBTBundleGoogleServices"
          AfterTargets="_LocateBuildToolsConfig"
          BeforeTargets="Compile;CoreCompile"
          Condition="$(IsAppleTarget) OR $(IsAndroidProject)">
    <GoogleTask ConfigurationPath="$(BuildToolsConfigFilePath)"
                ProjectName="$(MSBuildProjectName)"
                ProjectDirectory="$(MSBuildProjectDirectory)"
                SolutionDirectory="$(SolutionDir)"
                Configuration="$(Configuration)"
                IntermediateOutputPath="$(IntermediateOutputPath)"
                TargetFrameworkIdentifier="$(TargetFramework)">
      <Output ItemName="GeneratedFile"
              TaskParameter="GoogleOutput"/>
      <Output ItemName="FilesWrite"
              TaskParameter="GoogleOutput"/>
      <Output ItemName="GoogleServicesJson"
              TaskParameter="GoogleOutput"
              Condition="$(IsAndroidProject) == 'true'"/>
      <Output ItemName="BundleResource"
              TaskParameter="GoogleOutput"
              Condition="$(IsAppleTarget) == 'true'"/>
    </GoogleTask>
  </Target>

  <PropertyGroup>
    <CleanDependsOn>$(CleanDependsOn);_MBTClean</CleanDependsOn>
  </PropertyGroup>

  <Target Name="_MBTClean">
    <RemoveDir Directories="$(IntermediateOutputPath)\Mobile.BuildTools" />
    <Delete Files="$(IntermediateOutputPath)\google-services.json;$(IntermediateOutputPath)\GoogleService-Info.plist" />
  </Target>
</Project>
